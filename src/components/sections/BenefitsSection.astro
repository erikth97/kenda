---
/**
 * BenefitsSection.astro
 * 
 * Sección modular de beneficios que consume datos desde benefits.ts
 * Layout optimizado con grid responsivo 3+2
 */

import Container from '../../layouts/Container.astro';
import SectionHeading from '../common/SectionHeading.astro';
import BenefitCard from '../ui/custom/BenefitCard.astro';
import { benefits } from '../../data/benefits';

interface Props {
  title?: string;
  description?: string;
  className?: string;
}

const {
  title = "Beneficios",
  description = "En Motocicletas y Equipos, ofrecemos precios competitivos respaldados por 66 años de experiencia en calidad y servicio.",
  className = ""
} = Astro.props;
---

<!-- Sección de Beneficios con fondo gris claro cuadriculado -->
<section class={`benefits-section relative overflow-hidden py-16 ${className}`}>
  <Container>
    <SectionHeading
      title={title}
      description={description}
    />
    
    <!-- Primera fila: 3 tarjetas -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
      {benefits.slice(0, 3).map((benefit, index) => (
        <BenefitCard
          id={benefit.id}
          title={benefit.title}
          description={benefit.description}
          icon={benefit.icon}
          className={`h-full min-h-[280px] benefit-card-${index + 1}`}
        />
      ))}
    </div>
    
    <!-- Segunda fila: 2 tarjetas centradas -->
    <div class="md:px-[16.67%]">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {benefits.slice(3, 5).map((benefit, index) => (
          <BenefitCard
            id={benefit.id}
            title={benefit.title}
            description={benefit.description}
            icon={benefit.icon}
            className={`h-full min-h-[280px] benefit-card-${index + 4}`}
          />
        ))}
      </div>
    </div>
  </Container>
</section>

<style>
  /* Estilo para el patrón de cuadrícula en el fondo */
  .benefits-section {
    background-color: #f5f5f5;
    background-image: 
      linear-gradient(to right, rgba(255,255,255,1) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255,255,255,1) 1px, transparent 1px);
    background-size: 50px 50px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Intersection Observer para animar las cards cuando entren en viewport
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Agregar clase de animación cuando la card sea visible
            entry.target.classList.add('animate-in');
            // Dejar de observar esta card una vez animada
            observer.unobserve(entry.target);
          }
        });
      },
      {
        threshold: 0.2, // Trigger cuando 20% de la card es visible
        rootMargin: '0px 0px -50px 0px' // Offset para activar antes
      }
    );

    // Observar todas las benefit cards
    const benefitCards = document.querySelectorAll('.benefit-card');
    benefitCards.forEach((card) => {
      observer.observe(card);
    });

    // Cleanup al desmontar
    window.addEventListener('beforeunload', () => {
      observer.disconnect();
    });
  });
</script>