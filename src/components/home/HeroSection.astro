---
// Solo importamos el componente Image de Astro
import { Image } from 'astro:assets';

// Interfaces TypeScript 
interface HeroProps {
  title?: string;
  subtitle?: string;
}

// Props con valores por defecto
const { 
  title = "¿Te interesa ser Distribuidor KENDA?",
  subtitle = "Completa el formulario para agendar una llamada" 
} = Astro.props as HeroProps;

// División del título en DOS líneas - CORREGIDO
const titleParts = title.split(" ");
const firstLine = titleParts.slice(0, 3).join(" "); // "¿Te interesa ser"
const secondLine = titleParts.slice(3).join(" "); // "Distribuidor KENDA?"
---

<section id="hero" class="h-screen w-full relative overflow-hidden">

  <!-- Estructura de fondo -->
  <div class="absolute inset-0 z-0">
    <!-- Fondo izquierdo con estadio y cuadrícula blanca -->
    <div class="absolute inset-0 w-full h-full">
      <!-- Imagen de fondo del estadio con filtro - usando rutas estándar -->
      <div class="absolute inset-0 w-full h-full filter-img">
        <img src="/images/hero/gradas-background.png" alt="" class="w-full h-full object-cover" />
      </div>
      
      <!-- Overlay de cuadrícula blanca sobre el estadio - cuadros grandes -->
      <div class="absolute inset-0 w-full h-full grid-background"></div>
      
      <!-- Degradado mejorado al final de la sección -->
      <div class="absolute bottom-0 left-0 right-0 h-48 bg-gradient-to-t from-gray-100 via-gray-100/80 to-transparent"></div>
    </div>
    
    <!-- Contenedor para mapa y elementos superpuestos - SOLO VISIBLE EN DESKTOP -->
    <div class="absolute top-0 right-0 w-4/5 h-full overflow-hidden translate-x-8 hidden md:block">
      <!-- Imagen combinada de México con el hombre -->
      <div class="absolute inset-0">
        <img 
          src="/images/hero/map-man.webp" 
          alt="Mapa de México con distribuidor" 
          class="h-full w-full object-cover opacity-90"
          loading="lazy"
        />
      </div>
    </div>
  </div>
  
  <!-- Logo KENDA en la posición del círculo rojo (superior izquierda) -->
  <div class="absolute top-4 md:top-8 left-4 md:left-8 z-20">
    <img src="/images/kenda-logo.png" alt="KENDA" class="h-12 sm:h-16 md:h-24 lg:h-28" />
  </div>
  
  <!-- Logo "Motos y Equipos" - responsive: arriba en móvil, derecha en desktop -->
<div class="absolute top-4 left-1/2 transform -translate-x-1/2 md:translate-x-0 md:left-auto md:top-11 md:right-8 z-20 hidden sm:block">
  <img 
    src="/images/motos_equipos.webp" 
    alt="Motos y Equipos" 
    class="h-7 sm:h-10 md:h-12 lg:h-7 object-contain opacity-90"
    loading="lazy"
  />
</div>
  
  <!-- Contenido principal -->
  <div class="relative z-10 h-full w-full">

    <!-- Contenido lado izquierdo - adaptable para móvil -->
<div class="absolute inset-0 w-full md:w-2/5 flex flex-col justify-center p-6 sm:p-4 md:p-8 lg:p-16">
  <!-- Contenedor para contenido - adaptado para móvil -->
  <div class="flex flex-col mt-8 sm:mt-4 md:mt-8 space-y-6 sm:space-y-4 md:space-y-0">
    <!-- Título en DOS líneas con tamaño aumentado y responsive -->
    <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-8xl xl:text-9xl 2xl:text-[10rem] font-black text-black leading-[0.9] tracking-tight">
      <span class="block">{firstLine}</span>
      <span class="block">{secondLine}</span>
    </h1>
    
    <!-- Subtítulo - responsive para móvil -->
    <p class="text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-black my-6 sm:my-4 md:my-6 lg:my-8 font-light">
      <span class="md:whitespace-nowrap">{subtitle}</span>
    </p>
    
    <!-- Nuevo CTA limpio y organizado -->
    <div class="mt-8 md:mt-12">
      <button 
        type="button"
        id="registro-cta-button"
        aria-label="Iniciar proceso de registro como distribuidor"
        class="group relative bg-white/95 backdrop-blur-sm rounded-full pl-8 pr-3 py-3 shadow-lg hover:shadow-xl transition-all duration-300 ease-out hover:bg-white border border-gray-200/50 focus:outline-none focus:ring-4 focus:ring-orange-300/50 inline-flex items-center min-w-[280px] sm:min-w-[320px]"
      >
        <!-- Texto del botón -->
        <span class="text-gray-700 font-medium text-lg md:text-xl group-hover:text-gray-900 transition-colors duration-300 mr-6 flex-1">
          Iniciar registro
        </span>
        
        <!-- Círculo naranja con flecha -->
        <div class="w-10 h-10 md:w-12 md:h-12 bg-[#F7941D] rounded-full flex items-center justify-center transition-all duration-300 group-hover:bg-[#e8841a] group-hover:scale-110 animate-pulse-soft flex-shrink-0">
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke-width="2.5" 
            stroke="currentColor" 
            class="w-5 h-5 md:w-6 md:h-6 text-white transform transition-transform duration-300 group-hover:translate-x-1 animate-float-arrow" 
            id="arrow-right-icon"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
          </svg>
        </div>
      </button>
    </div>
  </div>
</div>
  </div>
  

</section>



<!-- Script para el nuevo CTA -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const registroButton = document.getElementById('registro-cta-button');
    const arrowIcon = document.getElementById('arrow-right-icon');
    
    if (registroButton && arrowIcon) {
      registroButton.addEventListener('click', function() {
        // Animación sutil de la flecha al hacer click
        arrowIcon.classList.add('animate-arrow-click');
        
        // Pausar temporalmente las animaciones continuas durante el click
        const circleContainer = arrowIcon.closest('.animate-pulse-soft') as HTMLElement;
        if (circleContainer) {
          circleContainer.style.animationPlayState = 'paused';
          (arrowIcon as HTMLElement).style.animationPlayState = 'paused';
        }
        
        // Scroll automático al formulario
        setTimeout(() => {
          const formularioSection = document.getElementById('formulario');
          if (formularioSection) {
            formularioSection.scrollIntoView({ 
              behavior: 'smooth',
              block: 'start',
              inline: 'nearest'
            });
            
            // Actualizar URL con hash
            history.pushState(null, '', '#formulario');
          }
          
          // Remover la animación después del scroll y reanudar las continuas
          setTimeout(() => {
            arrowIcon.classList.remove('animate-arrow-click');
            
            // Reanudar animaciones continuas
            const circleContainer = arrowIcon.closest('.animate-pulse-soft') as HTMLElement;
            if (circleContainer) {
              circleContainer.style.animationPlayState = 'running';
              (arrowIcon as HTMLElement).style.animationPlayState = 'running';
            }
          }, 800);
        }, 150);
      });
    }
  });
</script>

<style>
  /* Animación continua de palpitación suave para el círculo */
  .animate-pulse-soft {
    animation: pulseSoft 2s ease-in-out infinite;
  }
  
  @keyframes pulseSoft {
    0%, 100% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba(247, 148, 29, 0.4);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 0 0 8px rgba(247, 148, 29, 0);
    }
  }
  
  /* Animación flotante sutil para la flecha */
  .animate-float-arrow {
    animation: floatArrow 3s ease-in-out infinite;
  }
  
  @keyframes floatArrow {
    0%, 100% {
      transform: translateX(0);
    }
    50% {
      transform: translateX(2px);
    }
  }
  
  /* Animación sutil para la flecha al hacer click */
  .animate-arrow-click {
    animation: arrowClick 0.6s ease-out;
  }
  
  @keyframes arrowClick {
    0% {
      transform: translateX(0) scale(1);
    }
    30% {
      transform: translateX(4px) scale(1.1);
    }
    60% {
      transform: translateX(-2px) scale(0.95);
    }
    100% {
      transform: translateX(0) scale(1);
    }
  }
  
  /* Mejoras adicionales para el CTA */
  #registro-cta-button:hover .bg-\[#F7941D\] {
    transform: scale(1.05);
  }
  
  /* Estados de focus mejorados */
  #registro-cta-button:focus-visible {
    outline: 2px solid #F7941D;
    outline-offset: 3px;
  }

  /* Filtro para la imagen de las gradas */
  .filter-img {
    filter: brightness(0.9) contrast(0.9);
  }
  
  .filter-img::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(245, 245, 245, 0.7);
  }
  
  /* Cuadrícula con cuadros grandes */
  .grid-background {
    background-image: 
      linear-gradient(rgba(255, 255, 255, 0.3) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.3) 1px, transparent 1px);
    background-size: 80px 80px;
    background-position: center;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .grid-background {
      background-size: 60px 60px;
    }
  }
  
  /* Animación flotante para la llanta */
  .floating-tire {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes float {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-20px);
    }
    100% {
      transform: translateY(0);
    }
  }
</style>